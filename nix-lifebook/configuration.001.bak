# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).
# edited by phossil
# 2022-06-12

{ config, pkgs, ... }:

{
  imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
      ./userspace-sw.nix
      ./fonts.nix
    ];

  # gimme that nix command goodness
  nix.extraOptions = ''
    experimental-features = nix-command flakes
  '';

  # latest Linux kernel
  boot.kernelPackages = pkgs.linuxPackages_latest;
  # make Intel Graphics go fast
  boot.kernelParams = [ "i915.fastboot=1" "i915.enable_fbc=1" ];

  # splash screen :D
  boot.plymouth.enable = true;

  # Use the systemd-boot EFI boot loader.
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  # networking.hostName = "nixos"; # Define your hostname.
  # networking.wireless.enable = true;  # Enables wireless support via wpa_supplicant.
  networking.hostName = "Gem-LifeBook";
  # use NetworkManager instead, it's better anyway
  networking.networkmanager.enable = true;

  # Set your time zone.
  # time.timeZone = "Europe/Amsterdam";
  time.timeZone = "America/New_York";

  # The global useDHCP flag is deprecated, therefore explicitly set to false here.
  # Per-interface useDHCP will be mandatory in the future, so this generated config
  # replicates the default behaviour.
  #networking.useDHCP = false;
  #networking.interfaces.enp0s25.useDHCP = true;
  #networking.interfaces.wlp2s0.useDHCP = true;

  # Configure network proxy if necessary
  # networking.proxy.default = "http://user:password@proxy:port/";
  # networking.proxy.noProxy = "127.0.0.1,localhost,internal.domain";

  # use the X11 keymap settings instead
  console.useXkbConfig = true;

  # Enable the X11 windowing system.
  services.xserver.enable = true;

  # Enable the GNOME 3 Desktop Environment.
  services.xserver.displayManager.gdm.enable = true;
  services.xserver.desktopManager.gnome.enable = true;
  qt5 = {
    enable = true;
    platformTheme = "gnome";
    style = "adwaita-dark";
  };
  #services.xserver.desktopManager.plasma5.enable = true;
  #services.xserver.displayManager.sddm.enable = true;

  # Configure keymap in X11
  services.xserver.layout = "us";
  # services.xserver.xkbOptions = "eurosign:e";
  # Map Caps Lock as an additional Ctrl key
  services.xserver.xkbOptions = "ctrl:nocaps";

  # Enable CUPS with some drivers to print documents.
  services.printing.enable = true;
  services.printing.drivers = [ pkgs.samsung-unified-linux-driver ];
  # Enable scanner support because that's not included ???
  hardware.sane.enable = true;

  # NO, PulseAudio bad
  #####
  # Enable sound.
  # sound.enable = true;
  # hardware.pulseaudio.enable = true;
  #####
  # enable sound with PipeWire instead:
  hardware.pulseaudio.enable = false;
  # rtkit is optional but recommended
  security.rtkit.enable = true;
  services.pipewire = {
    enable = true;
    alsa.enable = true;
    alsa.support32Bit = true;
    pulse.enable = true;
    # If you want to use JACK applications, uncomment this
    jack.enable = true;
  };
  # bluetooth stuff for pipewire
  environment.etc = {
    "wireplumber/bluetooth.lua.d/51-bluez-config.lua".text = ''
      bluez_monitor.properties = {
        ["bluez5.enable-sbc-xq"] = true,
        ["bluez5.enable-msbc"] = true,
        ["bluez5.enable-hw-volume"] = true,
        ["bluez5.headset-roles"] = "[ hsp_hs hsp_ag hfp_hf hfp_ag ]"
      }
    '';
  };

  # Enable touchpad support (enabled default in most desktopManager).
  # services.xserver.libinput.enable = true;
  services.xserver.libinput.touchpad.tapping = true;

  # specify group ID because `useradd -mUs /bin/zsh phossil` 
  users.groups.phossil.gid = 1000;
  # Define a user account. Don't forget to set a password with ‘passwd’.
  users.users.phossil = {
    isNormalUser = true;
    shell = pkgs.zsh;
    home = "/home/phossil";
    description = "Phosu Parsons";
    # `useradd -mUs /bin/zsh phossil`
    uid = 1000;
    group = "phossil";
    # Run 'sudo' commands, manage VM's, commit tax fraud on android, 
    # make scans of crappy drawings, and use Zrythm/"JACK" with unlimited powah
    extraGroups = [ "wheel" "libvirtd" "audio" "adbusers" "scanner" "lp" ];
  };

  # install zsh with autosuggestions
  programs.zsh = {
    enable = true;
    autosuggestions.enable = true;
  };
  # enable 32-bit graphics support because Steam 
  hardware.opengl.driSupport32Bit = true;
  # Steam with native libraries
  ### it brokey
  #nixpkgs.config.packageOverrides = pkgs: {
  #  steam = pkgs.steam.override {
  #    nativeOnly = true;
  #  };
  #};
  ###
  programs.steam.enable = true;
  # install GraalVM 11 Community Edition
  programs.java = {
    enable = true;
    package = pkgs.graalvm11-ce;
    #package = pkgs.jdk;
  };
  # say hello to lineageOS
  programs.adb.enable = true;

  # Some programs need SUID wrappers, can be configured further or are
  # started in user sessions.
  # programs.mtr.enable = true;
  # Please leave enabled; it is required for pinentry, I think
  ###
  programs.gnupg.agent = {
    enable = true;
    enableSSHSupport = true;
  };
  ###

  # List services that you want to enable:
  # Enable the OpenSSH daemon.
  ## please don't, it's just a personal device
  services.openssh.enable = true;

  # userspace out-of-memory killer so your system doesn't freeze
  services.earlyoom.enable = true;
  # enable libvirt
  programs.dconf.enable = true;
  virtualisation.libvirtd.enable = true;
  # enable Anbox for Android apps
  ## it brokey
  #virtualisation.anbox.enable = true;
  # Avahi or something
  services.avahi = {
    enable = true;
    publish = {
      enable = true;
      addresses = true;
      workstation = true;
    };
  };

  # pxe server
  services.pixiecore = {
    enable = true;
    dhcpNoBind = true;
    openFirewall = true;
    kernel = "/srv/pxe/vmlinuz-lts";
    initrd = "/srv/pxe/initramfs-lts";
  };

  # Flatpak, the unnecessary package manager
  #services.flatpak.enable = true;
  # firmware updates and stuff
  services.fwupd.enable = true;

  # Open ports in the firewall.
  # networking.firewall.allowedTCPPorts = [ ... ];
  # networking.firewall.allowedUDPPorts = [ ... ];
  # Or disable the firewall altogether.
  # networking.firewall.enable = false;
  networking.firewall.allowedTCPPortRanges = [
    # when KDE Connect
    { from = 1714; to = 1764; }
  ];
  networking.firewall.allowedUDPPortRanges = [
    { from = 1714; to = 1764; }
  ];
  # for the random darkhttp instance
  networking.firewall.allowedTCPPorts = [ 8008 80 ];

  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # on your system were taken. It‘s perfectly fine and recommended to leave
  # this value at the release version of the first install of this system.
  # Before changing this value read the documentation for this option
  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
  #system.stateVersion = "21.05"; # Did you read the comment?
  #system.stateVersion = "21.11"; # Did you read the comment?
  system.stateVersion = "22.05"; # Did you read the comment?
  
  # added by phossil
  ##################
  # enable more screensharing while using wayland sessions
  xdg = {
    portal = {
      extraPortals = with pkgs; [
        xdg-desktop-portal-kde
        xdg-desktop-portal-wlr
      ];
    };
  };
  # enable bluetooth
  hardware.bluetooth.enable = true;
  # define lv2 path and some other stuff because zrythm
  # copied from musnix/modules/base.nix
  environment.variables = {
    DSSI_PATH   = "$HOME/.dssi:$HOME/.nix-profile/lib/dssi:/run/current-system/sw/lib/dssi";
    LADSPA_PATH = "$HOME/.ladspa:$HOME/.nix-profile/lib/ladspa:/run/current-system/sw/lib/ladspa";
    LV2_PATH    = "$HOME/.lv2:$HOME/.nix-profile/lib/lv2:/run/current-system/sw/lib/lv2";
    LXVST_PATH  = "$HOME/.lxvst:$HOME/.nix-profile/lib/lxvst:/run/current-system/sw/lib/lxvst";
    VST_PATH    = "$HOME/.vst:$HOME/.nix-profile/lib/vst:/run/current-system/sw/lib/vst";
  };
  # memory unlocking for zrythm, hopefully
  security.pam.loginLimits = [
    { domain = "@audio"; item = "memlock"; type = "-"; value = "unlimited"; }
    { domain = "@audio"; item = "rtprio"; type = "-"; value = "95"; }
  ];
}
