# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).
# edited by phossil
# 2022-06-08
# Dell Latitude 3350

{ config, pkgs, ... }:

{
  imports =
    [ # Include the results of the hardware scan.
      ./hardware-configuration.nix
    ];

  # gimme that nix command goodness
  nix.extraOptions = ''
    experimental-features = nix-command flakes
  '';

  # latest Linux kernel
  boot.kernelPackages = pkgs.linuxPackages_latest;
  # make Intel Graphics go fast, even for VMs
  boot.kernelParams = [ "i915.fastboot=1" "i915.enable_fbc=1" "enable_gvt=1" ];

  # let's add some more for intel graphics while we're at it :>
  nixpkgs.config.packageOverrides = pkgs: {
    # i want to play youtube videos without h.264, ty
    vaapiIntel = pkgs.vaapiIntel.override { enableHybridCodec = true; };
  };
  hardware.opengl = {
    enable = true;
    extraPackages = with pkgs; [
      intel-media-driver # LIBVA_DRIVER_NAME=iHD
      vaapiIntel         # LIBVA_DRIVER_NAME=i965 (older but works better for Firefox/Chromium)
      vaapiVdpau
      libvdpau-va-gl
      # opencl on a laptop ???
      intel-compute-runtime
    ];
    # enable 32-bit graphics support because Steam 
    driSupport32Bit = true;
  };

  # iio-sensor-proxy for ambient light sensor
  hardware.sensor.iio.enable = true;

  # Use the systemd-boot EFI boot loader.
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;

  # networking.hostName = "nixos"; # Define your hostname.
  networking.hostName = "Gem-3350";
  # use NetworkManager for managing networks ... it's in the name
  networking.networkmanager.enable = true;

  # Set your time zone.
  # time.timeZone = "Europe/Amsterdam";
  time.timeZone = "America/New_York";

  # Select internationalisation properties.
  i18n.defaultLocale = "en_US.UTF-8";
  console = {
    #font = "Lat2-Terminus16";
    font = "cybercafe";
    #keyMap = "us";
  };
  # use the X11 keymap settings instead
  console.useXkbConfig = true;

  # Enable the X11 windowing system.
  services.xserver.enable = true;

  # Enable the GNOME 3 Desktop Environment.
  services.xserver.displayManager.gdm.enable = true;
  services.xserver.desktopManager.gnome.enable = true;
  qt5 = {
    enable = true;
    platformTheme = "gnome";
    style = "adwaita-dark";
  };

  # Configure keymap in X11
  services.xserver.layout = "us";
  # services.xserver.xkbOptions = "eurosign:e";
  # Map Caps Lock as an additional Ctrl key
  services.xserver.xkbOptions = "ctrl:nocaps";

  # Enable CUPS with some drivers to print documents.
  services.printing.enable = true;
  services.printing.drivers = [ pkgs.samsung-unified-linux-driver ];
  # Enable scanner support because that's not included ???
  hardware.sane.enable = true;

  # NO, PulseAudio bad
  #####
  # Enable sound.
  # sound.enable = true;
  # hardware.pulseaudio.enable = true;
  #####
  # enable sound with PipeWire instead:
  hardware.pulseaudio.enable = false;
  # rtkit is optional but recommended
  security.rtkit.enable = true;
  services.pipewire = {
    enable = true;
    alsa.enable = true;
    alsa.support32Bit = true;
    pulse.enable = true;
    # If you want to use JACK applications, uncomment this
    jack.enable = true;
    # use the example session manager (no others are packaged yet so this is enabled by default,
    # no need to redefine it in your config for now)
    #media-session.enable = true;
    media-session.config.bluez-monitor.rules = [
      {
        # Matches all cards
        matches = [ { "device.name" = "~bluez_card.*"; } ];
        actions = {
          "update-props" = {
            "bluez5.reconnect-profiles" = [ "hfp_hf" "hsp_hs" "a2dp_sink" ];
            # mSBC is not expected to work on all headset + adapter combinations.
            "bluez5.msbc-support" = true;
            # SBC-XQ is not expected to work on all headset + adapter combinations.
            "bluez5.sbc-xq-support" = true;
          };
        };
      }
      {
        matches = [
          # Matches all sources
          { "node.name" = "~bluez_input.*"; }
          # Matches all outputs
          { "node.name" = "~bluez_output.*"; }
        ];
        actions = {
          "node.pause-on-idle" = false;
        };
      }
    ];
  };

  # Enable touchpad support (enabled default in most desktopManager).
  # services.xserver.libinput.enable = true;
  services.xserver.libinput.touchpad.tapping = true;

  # specify group ID because `useradd -mUs /bin/zsh phossil` 
  users.groups.phossil.gid = 1000;
  # Define a user account. Don't forget to set a password with ‘passwd’.
  users.users.phossil = {
    isNormalUser = true;
    shell = pkgs.zsh;
    home = "/home/phossil";
    description = "Phosu Parsons";
    # `useradd -mUs /bin/zsh phossil`
    uid = 1000;
    group = "phossil";
    # Run 'sudo' commands, manage VM's, commit tax fraud on android, 
    # make scans of crappy drawings, and use Zrythm/"JACK" with unlimited powah
    extraGroups = [ "wheel" "libvirtd" "audio" "adbusers" "scanner" "lp" ];
  };

  # Allow non-free software
  nixpkgs.config.allowUnfree = true;
  # List packages installed in system profile. To search, run:
  # $ nix search wget
  environment.systemPackages = with pkgs; [
    # now look at this lovely mess
    firefox-wayland discord links2 alacritty keepassxc emacs vivaldi
    vivaldi-ffmpeg-codecs starship
    hexchat lollypop neofetch speedcrunch
    libsForQt5.qt5.qtimageformats jp2a lolcat ark unrar
    libsForQt5.kdeconnect-kde cherrytree krita
    obs-studio gnome.gnome-disk-utility castor gnome.gnome-system-monitor
    bleachbit p7zip gparted tealdeer libreoffice-qt hunspellDicts.en_US
    nicotine-plus mpv picard libsForQt5.soundkonverter ffmpeg-full
    syncthing git pandoc bottom chezmoi pciutils
    lsof testdisk-qt whois trash-cli rmlint ripgrep fd gimp
    qbittorrent supercollider bucklespring-libinput
    dateutils scrcpy kiwix usbutils kwave audacity-gtk3 handbrake dvdauthor
    vorta drawpile mkchromecast openscad wings pikopixel
    grafx2 virt-manager gnome.geary bat gnome.epiphany thunderbird gnupg
    kleopatra youtube-dl woeusb ntfs3g uget puddletag
    brasero aria2 chntpw cdrkit cabextract wimlib sqlitebrowser
    imgbrd-grabber rustup xorg.xkill anki zim libsForQt5.kolourpaint
    bpm-tools protonvpn-gui gsmartcontrol android-studio
    minecraft shellcheck sbcl guile mangohud trash-cli noteshrink
    ddate cpu-x uget-integrator gnome.gnome-tweaks shntool flac
    koreader sigil epr nushell ion tokei wol pavucontrol rustscan
    nmap sshfs borgbackup rlwrap vokoscreen-ng gore nixfmt
    go-langserver waypipe nix-prefetch-github
    maven zile enlightenment.terminology calibre gnome-firmware-updater
    gnome.gnome-calendar electron go darkhttpd v4l-utils qgit digikam
    darktable rawtherapee cli-visualizer cava projectm ghostwriter heimdall
    bandwhich netsurf-browser okteta inkscape
    gnome.gnome-sound-recorder dotnetPackages.Nuget svt-av1 libavif
    rav1e dav1d nomacs haskellPackages.hakyll texlive.combined.scheme-full
    networkmanagerapplet vscode
    gnome-feeds gnome.dconf-editor hydrus drawing exfatprogs zrythm helvum
    gnome-usage gnome.gnome-logs flameshot hfsprogs macchina
    drawio treesheets blender uutils-coreutils syslinux goverlay
    imagemagick gthumb zip unzip foliate discordchatexporter-cli discocss
    # all of wine and maybe gecko + mono support
    #(winetricks.override { wine = wineWowPackages.full; })
    wineWowPackages.full mono
    # music and stuff
    vmpk hydrogen  zynaddsubfx-ntk calf mimic frescobaldi denemo
    MIDIVisualizer sonic-visualiser tony puredata
    schismtracker milkytracker qtractor ardour musescore giada
    # lv2 plugins - archlinux.org/groups/x86_64/lv2-plugins/
    geonkick distrho zam-plugins dragonfly-reverb zynaddsubfx-ntk adlplug
    ams-lv2 artyFX  x42-avldrums bchoppr bsequencer bshapr stone-phaser
    drumgizmo drumkv1 eq10q fomp x42-gmsynth guitarix gxplugins-lv2 helm
    infamousPlugins lsp-plugins mda_lv2 ninjas2 noise-repellent opnplug
    padthv1 qmidiarp samplv1 setbfree sorcer spectmorph synthv1
    wolf-shaper x42-plugins
    #natron multibootusb clasp-common-lisp monodevelop
    #heimdall-gui rustracer multimc vivaldi-widevine mitscheme
    #sonic-lineup olive-editor surge csound-qt
    # removed in favor of the uwu skin
    #bslizr
    emote logseq appimage-run libsForQt5.breeze-icons lazpaint celluloid
  ];
  # install zsh with autosuggestions
  programs.zsh = {
    enable = true;
    autosuggestions.enable = true;
  };
  # Steam with native libraries
  #nixpkgs.config.packageOverrides = pkgs: {
  #  steam = pkgs.steam.override {
  #   nativeOnly = true;
  #  };
  #};
  # nope, just steam
  programs.steam.enable = true;
  # install GraalVM 11 Community Edition
  programs.java = {
    enable = true;
    package = pkgs.graalvm11-ce;
    #package = pkgs.jdk;
    #package = pkgs.jdk16;
  };
  # say hello to lineageOS
  programs.adb.enable = true;

  # Some programs need SUID wrappers, can be configured further or are
  # started in user sessions.
  # programs.mtr.enable = true;
  # Please leave enabled; it is required for pinentry, I think
  ###
  programs.gnupg.agent = {
    enable = true;
    enableSSHSupport = true;
  };
  ###

  # List services that you want to enable:
  # Enable the OpenSSH daemon.
  ## please don't, it's just a personal device
  services.openssh.enable = true;

  # userspace out-of-memory killer so your system doesn't freeze
  services.earlyoom.enable = true;
  # enable libvirt
  programs.dconf.enable = true;
  virtualisation.libvirtd.enable = true;
  # enable Anbox for Android apps
  ## it brokey
  #virtualisation.anbox.enable = true;
  # Avahi or something
  services.avahi = {
    enable = true;
    publish = {
      enable = true;
      addresses = true;
      workstation = true;
    };
  };
  # Flatpak, the unnecessary package manager
  #services.flatpak.enable = true;
  # firmware updates and stuff
  services.fwupd.enable = true;

  # Open ports in the firewall.
  # networking.firewall.allowedTCPPorts = [ ... ];
  # networking.firewall.allowedUDPPorts = [ ... ];
  # Or disable the firewall altogether.
  # networking.firewall.enable = false;
  ## when KDE Connect
  networking.firewall.allowedTCPPortRanges = [
    { from = 1714; to = 1764; }
  ];
  networking.firewall.allowedUDPPortRanges = [
    { from = 1714; to = 1764; }
  ];
  # when wake-on-lan
  networking.firewall.allowedUDPPorts = [ 40000 ];
  # for the random darkhttp instance
  networking.firewall.allowedTCPPorts = [ 8008 ];

  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # on your system were taken. It‘s perfectly fine and recommended to leave
  # this value at the release version of the first install of this system.
  # Before changing this value read the documentation for this option
  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
  #system.stateVersion = "21.05"; # Did you read the comment?
  #system.stateVersion = "21.11"; # Did you read the comment?
  system.stateVersion = "22.05"; # Did you read the comment?
  
  # added by phossil
  ##################
  # PLEASE STOP FALLOCATING THE NIX STORE, THANK YOU
  # an annoyed btrfs user
  #nix.extraOptions = "preallocate-contents = false";
  # enable screensharing while using wayland sessions
  xdg = {
    portal = {
      extraPortals = with pkgs; [
        xdg-desktop-portal-kde
        xdg-desktop-portal-wlr
      ];
    };
  };
  # firefox with decent touchscreen suppport ??? :O
  ## this device does not have a touchscreen
  ## pasted for use with other devices
  #environment.sessionVariables = {
    #MOZ_USE_XINPUT2 = "1";
  #};
  # enable bluetooth
  hardware.bluetooth.enable = true;
  # extra fonts
  fonts.fonts = with pkgs; [
    # largest collection
    noto-fonts
    # chinese, japanese, and korean
    noto-fonts-cjk
    # emojis, anta baka
    noto-fonts-emoji
    # no idea what's in this one but ok
    noto-fonts-extra
    # make that code look good
    source-code-pro
    # random symbols and some logos
    font-awesome_5
    # japanese
    ipafont
    # essential Macrohard fonts like Times New Roman
    corefonts
    # yes
    xkcd-font
    # go outside and touch the grass :^)
    national-park-typeface
    # what, it looks nice
    go-font
    # more monospace fonts
    mononoki
    monoid
    iosevka
  ];
  # define lv2 path and some other stuff because zrythm
  # copied from musnix/modules/base.nix
  environment.variables = {
    DSSI_PATH   = "$HOME/.dssi:$HOME/.nix-profile/lib/dssi:/run/current-system/sw/lib/dssi";
    LADSPA_PATH = "$HOME/.ladspa:$HOME/.nix-profile/lib/ladspa:/run/current-system/sw/lib/ladspa";
    LV2_PATH    = "$HOME/.lv2:$HOME/.nix-profile/lib/lv2:/run/current-system/sw/lib/lv2";
    LXVST_PATH  = "$HOME/.lxvst:$HOME/.nix-profile/lib/lxvst:/run/current-system/sw/lib/lxvst";
    VST_PATH    = "$HOME/.vst:$HOME/.nix-profile/lib/vst:/run/current-system/sw/lib/vst";
  };
  # memory unlocking for zrythm, hopefully
  security.pam.loginLimits = [
    { domain = "@audio"; item = "memlock"; type = "-"; value = "unlimited"; }
    { domain = "@audio"; item = "rtprio"; type = "-"; value = "95"; }
  ];
}
